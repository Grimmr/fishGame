[gd_scene load_steps=4 format=2]

[sub_resource type="GDScript" id=1]
script/source = "extends Node2D


# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"
export var type = 0
var sprite = null
var chumValue = 0

signal arrived
var to
var from
var moving = false
var speed = 240

#preloaded sprites
var fish1 = preload(\"res://118Goldeen.png\")

# Called when the node enters the scene tree for the first time.
func _ready():
	setType(type)
	
func _process(delta):
	if moving:
		var heading = to - position
		#if not within snap
		if heading.length()  > speed * delta:
			position += heading.normalized() * speed * delta
		else:
			position = to
			moving = false
			emit_signal(\"arrived\", self, from, to)

#current type implications. 
#0-99 is water tiles, 
#100-399 is fish that clear by getting to  the top, 
#999 is a dummy place holder
func setType(t):
	if(sprite == null):
		sprite = get_child(0)
	type = t
	if(type == 0):
		sprite.texture.gradient.set_color(0, Color(0,0,255))
		chumValue = 0
	if(type == 1):
		sprite.texture.gradient.set_color(0, Color(0,255,0))
		chumValue = 0
	if(type == 2):
		sprite.texture.gradient.set_color(0, Color(255,0,0))
		chumValue = 0
	if(type == 3):
		sprite.texture.gradient.set_color(0, Color(0,255,255))
		chumValue = 0
	if(type == 4):
		sprite.texture.gradient.set_color(0, Color(255,255,0))
		chumValue = 0
	if(type == 100):
		sprite.texture = fish1
		sprite.scale = Vector2(0.04819277108433734940, 0.04819277108433734940)
		chumValue = 100

func getType():
	return type

func moveTo(x, y):
	if(!moving):
		from = Vector2(position)
		to = Vector2(x, y)
		moving = true
		
func isWater():
	return type < 100

func isFish():
	return type >= 100 && type != 999

func moveBy(x, y):
	if(!moving):
		from = Vector2(position)
		to = position + Vector2(x, y)
		moving = true

func _to_string():
	return \"%s\" % type

# Called every frame. 'delta' is the elapsed time since the previous frame.
#func _process(delta):
#	pass
"

[sub_resource type="Gradient" id=2]
resource_local_to_scene = true
offsets = PoolRealArray( 0 )
colors = PoolColorArray( 0.921569, 0, 1, 1 )

[sub_resource type="GradientTexture" id=3]
resource_local_to_scene = true
gradient = SubResource( 2 )
width = 40

[node name="Water" type="Node2D"]
script = SubResource( 1 )

[node name="Sprite" type="Sprite" parent="."]
position = Vector2( 20, 20 )
scale = Vector2( 1, 40 )
texture = SubResource( 3 )
